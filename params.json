{"name":"vObject","tagline":"vObject is a full featured Python package for parsing and generating vCard and vCalendar files","body":"# vObject\r\n\r\nvObject simplifies the process of parsing and creating iCalendar and\r\nvCard objects.\r\n\r\n\r\n## Installation\r\n\r\nTo install vObject, run::\r\n\r\n  python setup.py install\r\n\r\nvobject requires the dateutil package, which can be installed via\r\neasy_install or downloaded from http://labix.org/python-dateutil\r\n\r\n\r\n## Running tests\r\n\r\nUnit tests live in doctests throughout the source code, to run all tests, use::\r\n\r\n  python tests/tests.py\r\n\r\n\r\n## Usage\r\n\r\nCreating iCalendar objects\r\n..........................\r\n\r\nvobject has a basic datastructure for working with iCalendar-like\r\nsyntaxes.  Additionally, it defines specialized behaviors for many of\r\nthe commonly used iCalendar objects.\r\n\r\nTo create an object that already has a behavior defined, run:\r\n\r\n>>> import vobject\r\n>>> cal = vobject.newFromBehavior('vcalendar')\r\n>>> cal.behavior\r\n<class 'vobject.icalendar.VCalendar2_0'>\r\n\r\nConvenience functions exist to create iCalendar and vCard objects:\r\n\r\n>>> cal = vobject.iCalendar()\r\n>>> cal.behavior\r\n<class 'vobject.icalendar.VCalendar2_0'>\r\n>>> card = vobject.vCard()\r\n>>> card.behavior\r\n<class 'vobject.vcard.VCard3_0'>\r\n\r\nOnce you have an object, you can use the add method to create\r\nchildren:\r\n\r\n>>> cal.add('vevent')\r\n<VEVENT| []>\r\n>>> cal.vevent.add('summary').value = \"This is a note\"\r\n>>> cal.prettyPrint()\r\n VCALENDAR\r\n    VEVENT\r\n       SUMMARY: This is a note\r\n\r\nNote that summary is a little different from vevent, it's a\r\nContentLine, not a Component.  It can't have children, and it has a\r\nspecial value attribute.\r\n\r\nContentLines can also have parameters.  They can be accessed with\r\nregular attribute names with _param appended:\r\n\r\n>>> cal.vevent.summary.x_random_param = 'Random parameter'\r\n>>> cal.prettyPrint()\r\n VCALENDAR\r\n    VEVENT\r\n       SUMMARY: This is a note\r\n       params for  SUMMARY:\r\n          X-RANDOM ['Random parameter']\r\n\r\nThere are a few things to note about this example\r\n\r\n  * The underscore in x_random is converted to a dash (dashes are\r\n    legal in iCalendar, underscores legal in Python)\r\n  * X-RANDOM's value is a list.\r\n\r\nIf you want to access the full list of parameters, not just the first,\r\nuse <paramname>_paramlist:\r\n\r\n>>> cal.vevent.summary.x_random_paramlist\r\n['Random parameter']\r\n>>> cal.vevent.summary.x_random_paramlist.append('Other param')\r\n>>> cal.vevent.summary\r\n<SUMMARY{'X-RANDOM': ['Random parameter', 'Other param']}This is a note>\r\n\r\nSimilar to parameters, If you want to access more than just the first\r\nchild of a Component, you can access the full list of children of a\r\ngiven name by appending _list to the attribute name:\r\n\r\n>>> cal.add('vevent').add('summary').value = \"Second VEVENT\"\r\n>>> for ev in cal.vevent_list:\r\n...     print ev.summary.value\r\nThis is a note\r\nSecond VEVENT\r\n\r\nThe interaction between the del operator and the hiding of the\r\nunderlying list is a little tricky, del cal.vevent and del\r\ncal.vevent_list both delete all vevent children:\r\n\r\n>>> first_ev = cal.vevent\r\n>>> del cal.vevent\r\n>>> cal\r\n<VCALENDAR| []>\r\n>>> cal.vevent = first_ev\r\n\r\nvobject understands Python's datetime module and tzinfo classes.\r\n\r\n>>> import datetime\r\n>>> utc = vobject.icalendar.utc\r\n>>> start = cal.vevent.add('dtstart')\r\n>>> start.value = datetime.datetime(2006, 2, 16, tzinfo = utc)\r\n>>> first_ev.prettyPrint()\r\n     VEVENT\r\n        DTSTART: 2006-02-16 00:00:00+00:00\r\n        SUMMARY: This is a note\r\n        params for  SUMMARY:\r\n           X-RANDOM ['Random parameter', 'Other param']\r\n\r\nComponents and ContentLines have serialize methods:\r\n\r\n>>> cal.vevent.add('uid').value = 'Sample UID'\r\n>>> icalstream = cal.serialize()\r\n>>> print icalstream\r\nBEGIN:VCALENDAR\r\nVERSION:2.0\r\nPRODID:-//PYVOBJECT//NONSGML Version 1//EN\r\nBEGIN:VEVENT\r\nUID:Sample UID\r\nDTSTART:20060216T000000Z\r\nSUMMARY;X-RANDOM=Random parameter,Other param:This is a note\r\nEND:VEVENT\r\nEND:VCALENDAR\r\n\r\nObserve that serializing adds missing required lines like version and\r\nprodid.  A random UID would be generated, too, if one didn't exist.\r\n\r\nIf dtstart's tzinfo had been something other than UTC, an appropriate\r\nvtimezone would be created for it.\r\n\r\n\r\nParsing iCalendar objects\r\n.........................\r\n\r\nTo parse one top level component from an existing iCalendar stream or\r\nstring, use the readOne function:\r\n\r\n>>> parsedCal = vobject.readOne(icalstream)\r\n>>> parsedCal.vevent.dtstart.value\r\ndatetime.datetime(2006, 2, 16, 0, 0, tzinfo=tzutc())\r\n\r\nSimilarly, readComponents is a generator yielding one top level\r\ncomponent at a time from a stream or string.\r\n\r\n>>> vobject.readComponents(icalstream).next().vevent.dtstart.value\r\ndatetime.datetime(2006, 2, 16, 0, 0, tzinfo=tzutc())\r\n\r\nMore examples can be found in source code doctests.\r\n\r\nvCards\r\n......\r\n\r\nMaking vCards proceeds in much the same way. Note that the 'N' and 'FN'\r\nattributes are required.\r\n\r\n>>> j = vobject.vCard()\r\n>>> j.add('n')\r\n <N{}    >\r\n>>> j.n.value = vobject.vcard.Name( family='Harris', given='Jeffrey' )\r\n>>> j.add('fn')\r\n <FN{}>\r\n>>> j.fn.value ='Jeffrey Harris'\r\n>>> j.add('email')\r\n <EMAIL{}>\r\n>>> j.email.value = 'jeffrey@osafoundation.org'\r\n>>> j.email.type_param = 'INTERNET'\r\n>>> j.prettyPrint()\r\n VCARD\r\n    EMAIL: jeffrey@osafoundation.org\r\n    params for  EMAIL:\r\n       TYPE ['INTERNET']\r\n    FN: Jeffrey Harris\r\n    N:  Jeffrey  Harris\r\n\r\nserializing will add any required computable attributes (like 'VERSION')\r\n\r\n>>> j.serialize()\r\n'BEGIN:VCARD\\r\\nVERSION:3.0\\r\\nEMAIL;TYPE=INTERNET:jeffrey@osafoundation.org\\r\\nFN:Jeffrey Harris\\r\\nN:Harris;Jeffrey;;;\\r\\nEND:VCARD\\r\\n'\r\n>>> j.prettyPrint()\r\n VCARD\r\n    VERSION: 3.0\r\n    EMAIL: jeffrey@osafoundation.org\r\n    params for  EMAIL:\r\n       TYPE ['INTERNET']\r\n    FN: Jeffrey Harris\r\n    N:  Jeffrey  Harris \r\n\r\nParsing vCards\r\n..............\r\n\r\n>>> s = \"\"\"\r\n... BEGIN:VCARD\r\n... VERSION:3.0\r\n... EMAIL;TYPE=INTERNET:jeffrey@osafoundation.org\r\n... FN:Jeffrey Harris\r\n... N:Harris;Jeffrey;;;\r\n... END:VCARD\r\n... \"\"\"\r\n>>> v = vobject.readOne( s )\r\n>>> v.prettyPrint()\r\n VCARD\r\n    VERSION: 3.0\r\n    EMAIL: jeffrey@osafoundation.org\r\n    params for  EMAIL:\r\n       TYPE [u'INTERNET']\r\n    FN: Jeffrey Harris\r\n    N:  Jeffrey  Harris\r\n>>> v.n.value.family\r\nu'Harris'","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}